{"version":3,"file":"presenter.js","sourceRoot":"","sources":["presenter.ts"],"names":[],"mappings":";;;AACA,0CAAwF;AAGxF,SAAgB,gBAAgB,CAA4B,OAAoB,EAAE,KAAQ;IACxF,OAAO,CAAC,IAAI,wBAAa,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7C,CAAC;AAFD,4CAEC;AAED,SAAgB,iBAAiB,CAA4B,OAAoB,EAAE,KAAQ;IACzF,OAAO,CAAC,IAAI,yBAAc,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AAC9C,CAAC;AAFD,8CAEC;AAED,SAAgB,mBAAmB,CAA4B,OAAoB,EAAE,KAAQ;IAC3F,OAAO,CAAC,IAAI,2BAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC;AAChD,CAAC;AAFD,kDAEC;AAED,SAAgB,sBAAsB,CAA4B,SAAwB;IACxF,OAAO,qBAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACvC,CAAC;AAFD,wDAEC","sourcesContent":["import {IPresenter, IPresenterProps} from \"../types\";\nimport {CardPresenter, ModalPresenter, OverlayPresenter, Presenters} from \"../supports\";\n\n\nexport function useCardPresenter<T extends IPresenterProps>(overlay: HTMLElement, props: T){\n  return (new CardPresenter(overlay, props));\n}\n\nexport function useModalPresenter<T extends IPresenterProps>(overlay: HTMLElement, props: T){\n  return (new ModalPresenter(overlay, props));\n}\n\nexport function useOverlayPresenter<T extends IPresenterProps>(overlay: HTMLElement, props: T){\n  return (new OverlayPresenter(overlay, props));\n}\n\nexport function usePresenterController<P extends IPresenterProps>(presenter: IPresenter<P>){\n  return Presenters.context(presenter);\n}"]}