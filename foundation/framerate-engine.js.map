{"version":3,"file":"framerate-engine.js","sourceRoot":"","sources":["framerate-engine.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  IFramerate,\n  IFramerateEmitterScheme,\n  IFramerateOptions,\n  IFrameratePayload,\n  IFramerateProps,\n  IFramerateCollectionStateCallback,\n  IFramerateCollection, IClimbing\n} from \"../types\";\nimport {PropertiesBag, Climbing, EventDispatcher} from \"../supports\";\n\n\nexport class Framerate implements IFramerate {\n\n\n  emitter = new EventDispatcher<IFramerateEmitterScheme>()\n\n  #options: IFramerateOptions;\n\n  #current: IFrameratePayload = {} as IFrameratePayload\n\n  #status: boolean = false;\n\n  #paused: boolean = false;\n\n  #stopped: boolean = false;\n\n  #handler?: number = undefined;\n\n\n  get handler(): number | undefined {\n    return this.#handler\n  }\n\n  get options(): IFramerateOptions {\n    return this.#options;\n  }\n\n  get rawdelta() {\n    return (this.#options.to - this.#options.from);\n  }\n\n  get delta() {\n    return Math.abs(this.#options.to - this.#options.from);\n  }\n\n  get sens() {\n    return (this.#options.to - this.#options.from) > 0;\n  }\n\n  get paused() {\n    return this.#paused\n  }\n\n  get stopped() {\n    return this.#stopped\n  }\n\n\n  constructor(options: IFramerateOptions) {\n\n    this.#options = options;\n\n  }\n\n\n  #initialize() {\n\n    return this.reset();\n\n  }\n\n  get payload(): IFrameratePayload {\n\n    return this.#current;\n\n  }\n\n\n  #prepare(time: number) {\n\n    if (this.#current.started === undefined) {\n\n      this.#current.started = time;\n\n      this.emitter.dispatch('prepare', this);\n\n    }\n\n    return this;\n\n  }\n\n  #elapsed(time: number) {\n\n    if (typeof this.#current.started == 'number') {\n\n      this.#current.elapsed = time - this.#current.started;\n\n      this.emitter.dispatch('updateElapsed', this);\n\n    }\n\n    return this;\n\n  }\n\n\n  #calculate(time: number) {\n\n    if (typeof this.#current.elapsed == 'number') {\n\n      if (this.#current.previous !== time) {\n\n        const time = Math.min(this.#current.elapsed, this.options.duration);\n\n        const quotient = (time / this.options.duration);\n\n        const complete = time >= this.options.duration;\n\n\n        if (this.#options.ease) {\n\n          const percent = this.#options.ease.value(quotient) * 100;\n\n          const value = (percent * this.delta) / 100;\n\n          this.#options.frame({\n\n            percent,\n\n            value: this.syncronizeValue(value)\n\n          })\n\n        }\n\n        if (!this.#options.ease) {\n\n          const percent = quotient * 100;\n\n          const value = (((percent) * (this.delta)) / 100);\n\n          // const master = \n\n          this.#options.frame({\n\n            percent,\n\n            value: this.syncronizeValue(value)\n\n          })\n\n        }\n\n        if (complete) {\n\n          this.#status = true;\n\n          // this.#options.frame({ percent: 100, value: this.options.to })\n\n          this.emitter.dispatch('done', this);\n\n          return this;\n\n        }\n\n      }\n\n      this.emitter.dispatch('checkEnding', this);\n\n    }\n\n\n    return this;\n\n  }\n\n  #frame(time: number) {\n\n    if (typeof this.#current.elapsed == 'number') {\n\n      if (this.#current.elapsed < this.options.duration) {\n\n        this.#current.previous = time;\n\n        if (!this.#status) {\n\n          this.emitter.dispatch('frame', this);\n\n          this.#handler = requestAnimationFrame(this.#playing.bind(this))\n\n        }\n\n      }\n\n    }\n\n    return this;\n\n  }\n\n  #playing() {\n\n\n    // if( this.paused ){\n\n    //   console.warn('Pause, standby', this.#paused )\n\n    // }\n\n    // else if( this.#stopped ){\n\n    //   console.error('Stop, reset now', this.#stopped )\n\n    //   this.reset();\n\n    // }\n\n    // else{\n\n    this.#handler = requestAnimationFrame((time) => {\n\n      // if( this.paused || this.#stopped ){\n\n      //   console.log('standby', this.#current )\n\n      // }\n\n      // else{\n\n      this\n\n        .#prepare(time)\n\n        .#elapsed(time)\n\n        .#calculate(time)\n\n        .#frame(time)\n\n      ;\n\n      // }\n\n\n    })\n\n    // }\n\n    return this;\n\n  }\n\n  syncronizeValue(x: number): number {\n\n    return (this.#options.from > this.#options.to\n\n        ? this.#options.from - x\n\n        : x - this.#options.from\n\n    );\n\n    // return this.sens ? x : this.delta - x;\n\n  }\n\n  reset() {\n\n    this.#current.started = undefined;\n\n    this.#current.elapsed = undefined;\n\n    this.#current.previous = undefined;\n\n    this.#status = false;\n\n    this.#stopped = false;\n\n    this.emitter.dispatch('reset', this);\n\n    return this;\n\n  }\n\n  // pause(){\n\n  //   if(this.#handler) cancelAnimationFrame( this.#handler )\n\n  //   this.#paused = true;\n\n  //   return this;\n\n  // }\n\n  // resume(){\n\n  //   this.#paused = false;\n\n  //   this.#playing();\n\n  //   return this;\n\n  // }\n\n  stop() {\n\n    if (this.#handler) cancelAnimationFrame(this.#handler)\n\n    this.#stopped = true;\n\n    return this;\n\n  }\n\n  start() {\n\n    return this.#initialize().#playing();\n\n  }\n\n  asyncStart() {\n\n    return new Promise<IFramerate>((done) => {\n\n      this.emitter.listen('done', engine => done(engine))\n\n      this.start();\n\n    })\n\n  }\n\n\n}\n\n\nexport class FramerateCollection extends PropertiesBag<IFramerateProps> implements IFramerateCollection {\n\n  /**\n   * Jeu d'escalade pour l'excetion consécutive\n   */\n  climbing: IClimbing<IFramerate> | undefined = undefined;\n\n  /**\n   * Liste des FrameRate executés\n   */\n  protected executed: IFramerate[] = [];\n\n  get history() {\n    return this.executed\n  }\n\n\n  constructor(props: IFramerateProps) {\n\n    super(props);\n\n  }\n\n\n  reset() {\n\n    this.executed = [];\n\n    return this;\n\n  }\n\n\n  startParallel(callback?: IFramerateCollectionStateCallback) {\n\n    Object.values(this.reset().properties.entries)\n\n      .sort((a, b) => b.options.duration - a.options.duration)\n\n      .forEach((entry, key) => {\n\n        this.executed.push(entry);\n\n        if (key == 0) return entry.asyncStart().then(() => {\n\n          if (typeof callback == 'function') callback(this);\n\n          if (this.properties.infinite) this.start()\n\n\n        })\n\n        return entry.start()\n\n      })\n\n    return this;\n\n  }\n\n\n  startConsecutive(callback?: IFramerateCollectionStateCallback) {\n\n    this.climbing = (new Climbing<IFramerate>(this.properties.entries, (key) => {\n\n      if (this.properties.entries[key]) this.executed.push(this.properties.entries[key])\n\n      return this.properties.entries[key]?.asyncStart()\n\n    })).trigger(() => {\n\n      if (typeof callback == 'function') callback(this);\n\n      if (this.properties.infinite) this.start()\n\n    })\n\n    return this;\n\n  }\n\n\n  /**\n   * Démarrage des FrameRates\n   */\n  start(callback?: IFramerateCollectionStateCallback): this {\n\n    /**\n     * Execution parallèle\n     */\n    if (this.properties.parallel) {\n\n      this.startParallel(callback)\n\n    }\n\n    /**\n     * Execution consécutive\n     */\n    else {\n\n      this.startConsecutive(callback);\n\n    }\n\n\n    return this;\n\n  }\n\n\n}\n"]}