{"version":3,"file":"climbing.js","sourceRoot":"","sources":["climbing.ts"],"names":[],"mappings":"","sourcesContent":["\nexport type IClimbingTask<R> = Generator<Promise<R>, void, IClimbingNext<R>>;\n\nexport type IClimbingYield<R> = (index: number) => IClimbingTask<R>;\n\nexport type IClimbingAsyncTask<R> = (index: number) => Promise<R> | undefined;\n\nexport type IClimbingNext<R> = ((instance: IClimbing<R>) => any) | undefined;\n\n\nexport interface IClimbing<R> {\n\n  responses: Array<R>\n\n  prepared: IClimbingTask<R> | undefined;\n\n  yield: IClimbingYield<R>;\n\n  trigger(done: IClimbingNext<R>, start?: number): this;\n\n  create(entries: Array<R>, callback: IClimbingAsyncTask<R>): IClimbingYield<R>;\n\n  next(prepared: IClimbingTask<R>, next: IClimbingNext<R>): boolean;\n\n}\n\n"]}