{"version":3,"file":"animation.js","sourceRoot":"","sources":["animation.ts"],"names":[],"mappings":"","sourcesContent":["import type {IEasing} from \"./easing\";\nimport type {IElementTarget} from \"./value\";\n\nexport type IAnimationStateCallback = (payload: IAnimationStatePayload) => void;\n\nexport type IAnimationCalibrate = {\n\n  from: number;\n\n  to: number;\n\n  duration: number;\n\n  ease: IEasing;\n\n}\n\nexport type ICoreAnimationFeatureCallback = (payload: ICoreAnimationFeaturePayload) => string;\n\nexport type IAnimationStatePayload = {\n\n  animate: ICoreAnimation;\n\n  target: IElementTarget;\n\n}\n\nexport type ICoreAnimationFeaturePayload = {\n\n  value: number;\n\n  percent: number;\n\n}\n\nexport type ICoreAnimationFeature = {\n\n  from: number;\n\n  to: number;\n\n  duration: number;\n\n  ease?: IEasing | undefined\n\n  set: ICoreAnimationFeatureCallback;\n\n}\n\nexport type ICoreAnimationFeatures = {\n\n  [K in keyof Partial<CSSStyleDeclaration>]: ICoreAnimationFeature\n\n}\n\nexport type ICoreAnimationOptions = {\n\n  parallel?: boolean,\n\n  infinite?: boolean,\n\n}\n\nexport interface ICoreAnimation {\n\n  get features(): ICoreAnimationFeatures;\n\n  start(target: IElementTarget, callback?: IAnimationStateCallback): this;\n\n  calibrate(\n\n    feature: keyof ICoreAnimationFeatures,\n\n    property: keyof IAnimationCalibrate,\n\n    value: IAnimationCalibrate[keyof IAnimationCalibrate]\n\n  ): this;\n\n  calibrates(\n\n    property: keyof IAnimationCalibrate,\n\n    value: IAnimationCalibrate[keyof IAnimationCalibrate]\n\n  ): this;\n\n  reset(target: IElementTarget): this;\n\n}\n\n\n"]}