{"version":3,"file":"event.js","sourceRoot":"","sources":["event.ts"],"names":[],"mappings":"","sourcesContent":["\nexport type IEventDispatcherEntry = {\n\n  force?: boolean;\n\n  callback: IEventDispatcherCallback<any>\n\n}\n\nexport type IEventDispatcherEntries<Scheme extends IEventDispatcherScheme> = {\n\n  [K in keyof Scheme]: IEventDispatcherEntry[]\n\n}\n\n\nexport type IEventDispatcherProgations<Scheme extends IEventDispatcherScheme> = {\n\n  [K in keyof Scheme]: boolean\n\n}\n\nexport interface IEventDispatcherScheme {\n\n  [K: string]: any\n\n}\n\nexport interface IEventDispatcher<Scheme extends IEventDispatcherScheme> {\n\n  propagations: IEventDispatcherProgations<Scheme>;\n\n  entries: IEventDispatcherEntries<Scheme>;\n\n  listen<I extends keyof Scheme>(type: I, callback: IEventDispatcherCallback<Scheme[I]>, force?: boolean): this;\n\n  dispatch(type: keyof Scheme, data?: any): this;\n\n}\n\n\n/**\n * Emitter\n */\nexport type IEventDispatcherCallback<I> = (payload: I) => void | boolean;\n"]}