{"version":3,"file":"transitions.js","sourceRoot":"","sources":["transitions.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  IElementTarget,\n  ICoreTransition,\n  IAnimationStateCallback,\n  ICoreTransitionProps,\n  IAnimationCalibrate,\n} from '../types';\nimport { PropertiesBag } from './properties'\nimport { CoreAnimation } from './animation';\n\n\n\n\nexport class CoreTransition extends PropertiesBag<ICoreTransitionProps> implements ICoreTransition {\n\n  currentMoment?: boolean = undefined;\n\n  constructor(props: ICoreTransitionProps) {\n\n    super(props);\n\n  }\n\n  calibrate(\n\n    moment: 'in' | 'out',\n\n    property: keyof IAnimationCalibrate,\n\n    value: IAnimationCalibrate[keyof IAnimationCalibrate]\n\n  ) {\n\n    this.properties[moment].calibrates(property, value)\n\n    return this;\n\n  }\n\n  calibrateIn(\n\n    property: keyof IAnimationCalibrate,\n\n    value: IAnimationCalibrate[keyof IAnimationCalibrate]\n\n  ) {\n\n    this.calibrate('in', property, value)\n\n    return this;\n\n  }\n\n  calibrateOut(\n\n    property: keyof IAnimationCalibrate,\n\n    value: IAnimationCalibrate[keyof IAnimationCalibrate]\n\n  ) {\n\n    this.calibrate('in', property, value)\n\n    return this;\n\n  }\n\n  startIn(target: IElementTarget, callback?: IAnimationStateCallback): this {\n\n    this.currentMoment = true;\n\n    this.properties.in.start(target, callback);\n\n    return this;\n\n  }\n\n  startOut(target: IElementTarget, callback?: IAnimationStateCallback): this {\n\n    this.currentMoment = false;\n\n    this.properties.out.start(target, callback)\n\n    return this;\n\n  }\n\n  toggle(target: IElementTarget, callback?: IAnimationStateCallback): this {\n\n    if (this.currentMoment) this.startOut(target, callback)\n\n    else this.startIn(target, callback)\n\n    return this;\n\n  }\n\n}\n\n\n\n\nexport class CoreTransitions {\n\n\n  static get duration(): number { return this.#duration || 500; }\n\n  static set duration(value) { if (typeof value == 'number') this.#duration; }\n\n  static #duration: number = 500;\n\n\n  /**\n   * Fade Transition\n   */\n  static get Fade(): ICoreTransition {\n\n    return new CoreTransition({\n\n      in: new CoreAnimation({\n        opacity: {\n          from: 0,\n          to: 1000,\n          duration: this.#duration,\n          set: ({ value }) => `${value / 1000}`\n        }\n\n      }),\n\n      out: new CoreAnimation({\n        opacity: {\n          from: 1000,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `${value / 1000}`\n        }\n\n      }),\n\n    })\n\n  }\n\n\n\n  /**\n   * Cards\n   */\n  static get Card(): ICoreTransition {\n\n    return new CoreTransition({\n\n      in: new CoreAnimation({\n        transform: {\n          from: 1000,\n          to: 900,\n          duration: CoreTransitions.duration,\n          set: ({ value }) => `scale(${Math.abs(value / 1000)})`\n        },\n      }, {\n        parallel: true,\n      }),\n\n      out: new CoreAnimation({\n        transform: {\n          from: 900,\n          to: 1000,\n          duration: CoreTransitions.duration,\n          set: ({ value }) => `scale(${Math.abs(value / 1000)})`\n        },\n      }, {\n        parallel: true,\n      }),\n\n    })\n\n  }\n\n\n\n  /**\n   * Zoom Transition\n   */\n  static get Zoom(): ICoreTransition {\n\n    return new CoreTransition({\n\n      in: new CoreAnimation({\n        transform: {\n          from: 0,\n          to: 1000,\n          duration: this.#duration,\n          set: ({ value }) => `scale(${value / 1000})`\n        }\n\n      }),\n\n      out: new CoreAnimation({\n        transform: {\n          from: 1000,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `scale(${value / 1000})`\n        }\n\n      }),\n\n    })\n\n  }\n\n\n  /**\n   * Zoom Faded Transition\n   */\n  static get ZoomFaded(): ICoreTransition {\n\n    return new CoreTransition({\n\n      in: new CoreAnimation({\n        transform: {\n          from: 0,\n          to: 1000,\n          duration: this.#duration,\n          set: ({ value }) => `scale(${value / 1000})`\n        },\n\n        opacity: {\n          from: 0,\n          to: 1000,\n          duration: this.#duration,\n          set: ({ value }) => `${value / 1000}`\n        },\n      }),\n\n      out: new CoreAnimation({\n        transform: {\n          from: 1000,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `scale(${value / 1000})`\n        },\n\n        opacity: {\n          from: 1000,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `${value / 1000}`\n        },\n      }),\n\n    })\n\n  }\n\n\n\n\n\n\n  /**\n   * SlideHorizontal  Transition avec fondu\n   */\n  static get SlideFadedHorizontal(): ICoreTransition {\n\n    return new CoreTransition({\n\n      in: new CoreAnimation({\n        transform: {\n          from: 100,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `translateX(${value}%)`\n        },\n\n        opacity: {\n          from: 0,\n          to: 1000,\n          duration: this.#duration,\n          set: ({ value }) => `${value / 1000}`\n        },\n\n      }, {\n        parallel: true,\n      }),\n\n      out: new CoreAnimation({\n        transform: {\n          from: 0,\n          to: 100,\n          duration: this.#duration,\n          set: ({ value }) => `translateX(${value}%)`\n        },\n        opacity: {\n          from: 1000,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `${value / 1000}`\n        }\n\n      }, {\n        parallel: true,\n      }),\n\n    })\n\n  }\n\n\n\n\n  /**\n   * SlideHorizontal  Transition\n   */\n  static get SlideHorizontal(): ICoreTransition {\n\n    return new CoreTransition({\n\n      in: new CoreAnimation({\n        transform: {\n          from: 100,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `translateX(${value}%)`\n        },\n\n      }, {\n        parallel: true,\n      }),\n\n      out: new CoreAnimation({\n        transform: {\n          from: 0,\n          to: 100,\n          duration: this.#duration,\n          set: ({ value }) => `translateX(${value}%)`\n        },\n\n      }, {\n        parallel: true,\n      }),\n\n    })\n\n  }\n\n\n\n\n  /**\n   * SlideVertical  Transition avec fondu\n   */\n  static get SlideFadedVertical(): ICoreTransition {\n\n    return new CoreTransition({\n\n      in: new CoreAnimation({\n        transform: {\n          from: 100,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `translateY(${value}%)`\n        },\n\n        opacity: {\n          from: 0,\n          to: 1000,\n          duration: this.#duration,\n          set: ({ value }) => `${value / 1000}`\n        },\n\n      }, {\n        parallel: true,\n      }),\n\n      out: new CoreAnimation({\n        transform: {\n          from: 0,\n          to: 100,\n          duration: this.#duration,\n          set: ({ value }) => `translateY(${value}%)`\n        },\n        opacity: {\n          from: 1000,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `${value / 1000}`\n        }\n\n      }, {\n        parallel: true,\n      }),\n\n    })\n\n  }\n\n\n\n\n  /**\n   * SlideVertical  Transition\n   */\n  static get SlideVertical(): ICoreTransition {\n\n    return new CoreTransition({\n\n      in: new CoreAnimation({\n        transform: {\n          from: 100,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `translateY(${value}%)`\n        },\n\n      }, {\n        parallel: true,\n      }),\n\n      out: new CoreAnimation({\n        transform: {\n          from: 0,\n          to: 100,\n          duration: this.#duration,\n          set: ({ value }) => `translateY(${value}%)`\n        },\n\n      }, {\n        parallel: true,\n      }),\n\n    })\n\n  }\n\n\n\n\n\n\n\n  /**\n   * SlideHorizontalReverse  Transition avec fondu\n   */\n  static get SlideFadedHorizontalReverse(): ICoreTransition {\n\n    return new CoreTransition({\n\n      in: new CoreAnimation({\n        transform: {\n          from: 100,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `translateX(-${value}%)`\n        },\n\n        opacity: {\n          from: 0,\n          to: 1000,\n          duration: this.#duration,\n          set: ({ value }) => `${value / 1000}`\n        },\n\n      }, {\n        parallel: true,\n      }),\n\n      out: new CoreAnimation({\n        transform: {\n          from: 0,\n          to: 100,\n          duration: this.#duration,\n          set: ({ value }) => `translateX(-${value}%)`\n        },\n        opacity: {\n          from: 1000,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `${value / 1000}`\n        }\n\n      }, {\n        parallel: true,\n      }),\n\n    })\n\n  }\n\n\n  /**\n   * SlideHorizontal  Transition\n   */\n  static get SlideHorizontalReverse(): ICoreTransition {\n\n    return new CoreTransition({\n\n      in: new CoreAnimation({\n        transform: {\n          from: 100,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `translateX(-${value}%)`\n        },\n\n      }, {\n        parallel: true,\n      }),\n\n      out: new CoreAnimation({\n        transform: {\n          from: 0,\n          to: 100,\n          duration: this.#duration,\n          set: ({ value }) => `translateX(-${value}%)`\n        },\n\n      }, {\n        parallel: true,\n      }),\n\n    })\n\n  }\n\n\n  /**\n   * SlideVertical  Transition avec fondu\n   */\n  static get SlideFadedVerticalReverse(): ICoreTransition {\n\n    return new CoreTransition({\n\n      in: new CoreAnimation({\n        transform: {\n          from: 100,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `translateY(-${value}%)`\n        },\n\n        opacity: {\n          from: 0,\n          to: 1000,\n          duration: this.#duration,\n          set: ({ value }) => `${value / 1000}`\n        },\n\n      }, {\n        parallel: true,\n      }),\n\n      out: new CoreAnimation({\n        transform: {\n          from: 0,\n          to: 100,\n          duration: this.#duration,\n          set: ({ value }) => `translateY(-${value}%)`\n        },\n        opacity: {\n          from: 1000,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `${value / 1000}`\n        }\n\n      }, {\n        parallel: true,\n      }),\n\n    })\n\n  }\n\n\n  /**\n   * SlideVerticalReverse  Transition\n   */\n  static get SlideVerticalReverse(): ICoreTransition {\n\n    return new CoreTransition({\n\n      in: new CoreAnimation({\n        transform: {\n          from: 100,\n          to: 0,\n          duration: this.#duration,\n          set: ({ value }) => `translateY(-${value}%)`\n        },\n\n      }, {\n        parallel: true,\n      }),\n\n      out: new CoreAnimation({\n        transform: {\n          from: 0,\n          to: 100,\n          duration: this.#duration,\n          set: ({ value }) => `translateY(-${value}%)`\n        },\n\n      }, {\n        parallel: true,\n      }),\n\n    })\n\n  }\n\n\n\n\n}\n\n\n"]}