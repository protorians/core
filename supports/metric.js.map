{"version":3,"file":"metric.js","sourceRoot":"","sources":["metric.ts"],"names":[],"mappings":";;;AAAA,MAAa,YAAY;IAqBxB,MAAM,CAAC,YAAY,CAAC,GAAW,EAAE,GAAW;QAE3C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IAEtD,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,IAAY,EAAE,MAAc;QAE9C,IAAI,KAAK,EAAE,GAAG,GAAkB,EAAE,CAAC;QAEnC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAExB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YAE1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAEjC,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAEjD,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAE5B,CAAC;QAEF,CAAC;QAED,OAAO,GAAG,CAAC;IAEZ,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,MAAc;QAEhC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,CAAC,CAAC;IAE5E,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,MAAc;QAE9B,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC;IAExE,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,MAAc;QAElC,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC;IAEpD,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,MAAc;QAE3B,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE,EAAE,MAAM,CAAC,CAAC;IAE1D,CAAC;;AAvEF,oCAyEC;AAvEO,0BAAa,GACnB,6HAA6H,CAAC;AAExH,gCAAmB,GACzB,yEAAyE,CAAC;AAEpE,gCAAmB,GACzB,yEAAyE,CAAC;AAEpE,wBAAW,GAAG,qDAAqD,CAAC;AAEpE,wBAAW,GAAG,qDAAqD,CAAC;AAEpE,sBAAS,GAAG,iCAAiC,CAAC;AAE9C,sBAAS,GAAG,iCAAiC,CAAC;AAE9C,oBAAO,GAAG,qBAAqB,CAAC","sourcesContent":["export class MetricRandom {\n\n\tstatic ALPHA_NUMERIC =\n\t\t\"a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9\";\n\n\tstatic ALPHA_NUMERIC_LOWER =\n\t\t\"a b c d e f g h i j k l m n o p q r s t u v w x y z 0 1 2 3 4 5 6 7 8 9\";\n\n\tstatic ALPHA_NUMERIC_UPPER =\n\t\t\"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9\";\n\n\tstatic ALPHA_UPPER = \"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\";\n\n\tstatic ALPHA_LOWER = \"a b c d e f g h i j k l m n o p q r s t u v w x y z\";\n\n\tstatic HEX_UPPER = \"A B C D E F 0 1 2 3 4 5 6 7 8 9\";\n\n\tstatic HEX_LOWER = \"a b c d e f 0 1 2 3 4 5 6 7 8 9\";\n\n\tstatic NUMERIC = \"0 1 2 3 4 5 6 7 8 9\";\n\n\tstatic CreateRandom(min: number, max: number) : number {\n\n\t\treturn Math.floor(Math.random() * (max - min) + min);\n\n\t}\n\n\tstatic CreateBlock(base: string, length: number) : string[] {\n\n\t\tlet based, out: Array<string> = [];\n\n\t\tbased = base.split(\" \");\n\n\t\tif (Array.isArray(based)) {\n\t\n\t\t\tfor (let x = 0; x < length; x++) {\n\t\n\t\t\t\tconst k = this.CreateRandom(0, based.length - 1);\n\n\t\t\t\tout[out.length] = based[k];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn out;\n\n\t}\n\n\tstatic CreateAlpha(length: number) : string[] {\n\n\t\treturn this.CreateBlock(`${this.ALPHA_LOWER} ${this.ALPHA_UPPER}`, length);\n\t\n\t}\n\n\tstatic CreateHEX(length: number) : string[] {\n\n\t\treturn this.CreateBlock(`${this.HEX_UPPER} ${this.HEX_LOWER}`, length);\n\n\t}\n\n\tstatic CreateNumeric(length: number) : string[] {\n\n\t\treturn this.CreateBlock(`${this.NUMERIC}`, length);\n\n\t}\n\n\tstatic Create(length: number) : string[] {\n\n\t\treturn this.CreateBlock(`${this.ALPHA_NUMERIC}`, length);\n\n\t}\n\n}\n"]}