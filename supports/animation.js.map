{"version":3,"file":"animation.js","sourceRoot":"","sources":["animation.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  ICoreAnimation,\n  ICoreAnimationFeatures,\n  ICoreAnimationOptions,\n  IElementTarget,\n  IAnimationStateCallback,\n  IFramerate,\n  IFramerateCollection,\n  IAnimationCalibrate,\n  ICoreAnimationFeature,\n} from '../types';\nimport {FramerateCollection, Framerate} from '../foundation';\n\n\nexport class CoreAnimation implements ICoreAnimation {\n\n  get features() {\n    return this.#features\n  }\n\n  #features: ICoreAnimationFeatures;\n\n  #frameRates?: IFramerateCollection;\n\n  #options?: ICoreAnimationOptions;\n\n\n  constructor(features: ICoreAnimationFeatures, options?: ICoreAnimationOptions) {\n\n    this.#features = features;\n\n    this.#options = options || ({} as ICoreAnimationOptions);\n\n  }\n\n\n  calibrate(\n    feature: keyof ICoreAnimationFeatures,\n    property: keyof IAnimationCalibrate,\n    value: IAnimationCalibrate[keyof IAnimationCalibrate]\n  ) {\n\n    if (this.features[feature] != undefined) {\n\n      const calibrate: ICoreAnimationFeature = {...this.#features[feature as any]}\n\n      // @ts-ignore\n      calibrate[property] = value;\n\n      this.#features[feature as any] = calibrate\n\n    }\n\n    return this;\n\n  }\n\n\n  calibrates(\n    property: keyof IAnimationCalibrate,\n    value: IAnimationCalibrate[keyof IAnimationCalibrate]\n  ): this {\n\n    Object.entries(this.#features).forEach(({0: name}) => {\n\n      this.calibrate(\n        name as keyof ICoreAnimationFeatures,\n\n        property,\n\n        value\n      )\n\n    })\n\n    return this;\n\n  }\n\n\n  reset(target: IElementTarget) {\n\n    this.#frameRates = new FramerateCollection({\n\n      parallel: this.#options?.parallel,\n\n      infinite: this.#options?.infinite,\n\n      entries: this.#createFrameRatesEntries(target)\n\n    })\n\n    return this;\n\n  }\n\n\n  #createFrameRatesEntries(target: IElementTarget) {\n\n    const entries: IFramerate[] = [];\n\n    (Object.entries(this.#features).forEach(({0: property, 1: animation}) => {\n\n      entries.push(new Framerate({\n\n        from: animation.from,\n\n        to: animation.to,\n\n        duration: animation.duration,\n\n        ease: animation.ease,\n\n        frame: (payload) => {\n\n          if (target) {\n\n            const propertyValue = animation.set(payload);\n\n            target.style[property as any] = propertyValue\n\n          }\n\n        }\n\n      }))\n\n\n    }));\n\n    return entries;\n\n  }\n\n\n  start(target: IElementTarget, callback?: IAnimationStateCallback) {\n\n    this.reset(target);\n\n    if (this.#frameRates) {\n\n      this.#frameRates.start(() => {\n\n        if (typeof callback == 'function') callback({animate: this, target,})\n\n      });\n\n    }\n\n    return this;\n\n  }\n\n}\n\n\n\n\n"]}