{"version":3,"file":"property.js","sourceRoot":"","sources":["property.ts"],"names":[],"mappings":";;;AAOA,MAAa,QAAQ;IAKnB,YAAY,MAAU;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,EAAuB,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,MAAM,IAAI,EAAO,CAAC;QACtC,IAAI,CAAC,KAAK,EAAE,CAAA;IACd,CAAC;IAED,MAAM,CAAC,OAAO,CAA2B,MAAU;QACjD,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAED,IAAI,CAAC,QAAiC;QACpC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;QAC3B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,GAAG,CAAoB,GAAM,EAAE,KAAW;QACxC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAa,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,GAAG,CAAoB,GAAM;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAS,CAAC;IACpC,CAAC;IAED,KAAK,CAAoB,GAAM;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED,IAAI,CAAC,MAAS;QACZ,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;YAC9C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAmB,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAA;QACF,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC;IAED,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA;QACjB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,CAAoB,GAAM;QAC9B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;QACrB,OAAO,IAAI,CAAC;IACd,CAAC;CAGF;AAvED,4BAuEC","sourcesContent":["import type {\n  IProperty,\n  PropertyEachCallback,\n  PropertyScheme\n} from \"../types\";\n\n\nexport class Property<T extends PropertyScheme> implements IProperty<T> {\n\n  protected _map: Map<keyof T, T[keyof T]>;\n  protected originScheme: T;\n\n  constructor(scheme?: T) {\n    this._map = new Map<keyof T, T[keyof T]>();\n    this.originScheme = scheme || {} as T;\n    this.reset()\n  }\n\n  static context<T extends PropertyScheme>(scheme?: T): IProperty<T> {\n    return new this(scheme);\n  }\n\n  get map(): Map<keyof T, T[keyof T]> {\n    return this._map;\n  }\n\n  get scheme(): IterableIterator<[keyof T, T[keyof T]]> {\n    return this._map.entries();\n  }\n\n  get values(): IterableIterator<T[keyof T]> {\n    return this._map.values();\n  }\n\n  get keys(): IterableIterator<keyof T> {\n    return this._map.keys();\n  }\n\n  each(callback: PropertyEachCallback<T>): IProperty<T> {\n    this._map.forEach(callback)\n    return this;\n  }\n\n  set<P extends keyof T>(key: P, value: T[P]): IProperty<T> {\n    this._map.set(key, value as T[P]);\n    return this;\n  }\n\n  get<P extends keyof T>(key: P): T[P] {\n    return this._map.get(key) as T[P];\n  }\n\n  exist<P extends keyof T>(key: P): boolean {\n    return this._map.has(key);\n  }\n\n  fill(scheme: T): IProperty<T> {\n    Object.entries(scheme).forEach(([key, value]) => {\n      this._map.set(key, value as T[keyof T]);\n    })\n    return this;\n  }\n\n  reset(): IProperty<T> {\n    return this.fill(this.originScheme);\n  }\n\n  clear(): IProperty<T> {\n    this._map.clear()\n    return this;\n  }\n\n  delete<P extends keyof T>(key: P): IProperty<T> {\n    this._map.delete(key)\n    return this;\n  }\n\n\n}"]}